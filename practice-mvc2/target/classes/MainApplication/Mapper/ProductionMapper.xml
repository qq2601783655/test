<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MainApplication.Mapper.ProductionMapper">
  <resultMap id="BaseResultMap" type="MainApplication.PoJo.Production">
    <id column="pro_id" jdbcType="INTEGER" property="proId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="information" jdbcType="VARCHAR" property="information" />
    <result column="brank" jdbcType="VARCHAR" property="brank" />
    <result column="p_account" jdbcType="INTEGER" property="pAccount" />
    <result column="c_id" jdbcType="INTEGER" property="cId" />
    <result column="b_id" jdbcType="INTEGER" property="bId" />
    <result column="img" jdbcType="VARCHAR" property="img" />
    <result column="score" jdbcType="INTEGER" property="score" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="MainApplication.PoJo.Production">
    <result column="details" jdbcType="LONGVARCHAR" property="details" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pro_id, name, price, information, brank, p_account, c_id, b_id, img, score
  </sql>
  <sql id="Blob_Column_List">
    details
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="MainApplication.PoJo.ProductionExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from production
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="MainApplication.PoJo.ProductionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from production
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from production
    where pro_id = #{proId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from production
    where pro_id = #{proId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="MainApplication.PoJo.ProductionExample">
    delete from production
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="MainApplication.PoJo.Production">
    insert into production (pro_id, name, price, 
      information, brank, p_account, 
      c_id, b_id, img, score, 
      details)
    values (#{proId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, 
      #{information,jdbcType=VARCHAR}, #{brank,jdbcType=VARCHAR}, #{pAccount,jdbcType=INTEGER}, 
      #{cId,jdbcType=INTEGER}, #{bId,jdbcType=INTEGER}, #{img,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}, 
      #{details,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="MainApplication.PoJo.Production">
    insert into production
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="proId != null">
        pro_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="information != null">
        information,
      </if>
      <if test="brank != null">
        brank,
      </if>
      <if test="pAccount != null">
        p_account,
      </if>
      <if test="cId != null">
        c_id,
      </if>
      <if test="bId != null">
        b_id,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="details != null">
        details,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="proId != null">
        #{proId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="information != null">
        #{information,jdbcType=VARCHAR},
      </if>
      <if test="brank != null">
        #{brank,jdbcType=VARCHAR},
      </if>
      <if test="pAccount != null">
        #{pAccount,jdbcType=INTEGER},
      </if>
      <if test="cId != null">
        #{cId,jdbcType=INTEGER},
      </if>
      <if test="bId != null">
        #{bId,jdbcType=INTEGER},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="details != null">
        #{details,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="MainApplication.PoJo.ProductionExample" resultType="java.lang.Long">
    select count(*) from production
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update production
    <set>
      <if test="record.proId != null">
        pro_id = #{record.proId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.information != null">
        information = #{record.information,jdbcType=VARCHAR},
      </if>
      <if test="record.brank != null">
        brank = #{record.brank,jdbcType=VARCHAR},
      </if>
      <if test="record.pAccount != null">
        p_account = #{record.pAccount,jdbcType=INTEGER},
      </if>
      <if test="record.cId != null">
        c_id = #{record.cId,jdbcType=INTEGER},
      </if>
      <if test="record.bId != null">
        b_id = #{record.bId,jdbcType=INTEGER},
      </if>
      <if test="record.img != null">
        img = #{record.img,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.details != null">
        details = #{record.details,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update production
    set pro_id = #{record.proId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=INTEGER},
      information = #{record.information,jdbcType=VARCHAR},
      brank = #{record.brank,jdbcType=VARCHAR},
      p_account = #{record.pAccount,jdbcType=INTEGER},
      c_id = #{record.cId,jdbcType=INTEGER},
      b_id = #{record.bId,jdbcType=INTEGER},
      img = #{record.img,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      details = #{record.details,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update production
    set pro_id = #{record.proId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=INTEGER},
      information = #{record.information,jdbcType=VARCHAR},
      brank = #{record.brank,jdbcType=VARCHAR},
      p_account = #{record.pAccount,jdbcType=INTEGER},
      c_id = #{record.cId,jdbcType=INTEGER},
      b_id = #{record.bId,jdbcType=INTEGER},
      img = #{record.img,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="MainApplication.PoJo.Production">
    update production
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="information != null">
        information = #{information,jdbcType=VARCHAR},
      </if>
      <if test="brank != null">
        brank = #{brank,jdbcType=VARCHAR},
      </if>
      <if test="pAccount != null">
        p_account = #{pAccount,jdbcType=INTEGER},
      </if>
      <if test="cId != null">
        c_id = #{cId,jdbcType=INTEGER},
      </if>
      <if test="bId != null">
        b_id = #{bId,jdbcType=INTEGER},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="details != null">
        details = #{details,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where pro_id = #{proId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="MainApplication.PoJo.Production">
    update production
    set name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      information = #{information,jdbcType=VARCHAR},
      brank = #{brank,jdbcType=VARCHAR},
      p_account = #{pAccount,jdbcType=INTEGER},
      c_id = #{cId,jdbcType=INTEGER},
      b_id = #{bId,jdbcType=INTEGER},
      img = #{img,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      details = #{details,jdbcType=LONGVARCHAR}
    where pro_id = #{proId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="MainApplication.PoJo.Production">
    update production
    set name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      information = #{information,jdbcType=VARCHAR},
      brank = #{brank,jdbcType=VARCHAR},
      p_account = #{pAccount,jdbcType=INTEGER},
      c_id = #{cId,jdbcType=INTEGER},
      b_id = #{bId,jdbcType=INTEGER},
      img = #{img,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER}
    where pro_id = #{proId,jdbcType=INTEGER}
  </update>
</mapper>